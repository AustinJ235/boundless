use crate::client::EventReceiver;
use crate::{KBKey, KBMSEvent, MSButton};
use evdev_rs::enums::{EventCode, EventType, EV_KEY, EV_REL, EV_SYN};
use evdev_rs::uinput::UInputDevice;
use evdev_rs::{DeviceWrapper, InputEvent, TimeVal, UninitDevice};
use std::time::SystemTime;
use strum::IntoEnumIterator;

pub struct UInputEventReceiver {
	virtual_device: UInputDevice,
}

impl UInputEventReceiver {
	pub fn new() -> Result<Box<dyn EventReceiver>, String> {
		let device_template = UninitDevice::new().unwrap();
		device_template.set_name("boundless");
		device_template.set_vendor_id(0x626e);
		device_template.set_product_id(0x646c);
		device_template.set_version(0x1234);
		device_template.set_bustype(3);

		for enable_event in [EventType::EV_SYN, EventType::EV_KEY, EventType::EV_REL, EventType::EV_MSC] {
			if let Err(_) = device_template.enable_event_type(&enable_event) {
				return Err(format!("Failed to enable event type: {:?}", enable_event));
			}
		}

		let mut enable_codes = vec![
			EventCode::EV_SYN(EV_SYN::SYN_REPORT),
			EventCode::EV_SYN(EV_SYN::SYN_CONFIG),
			EventCode::EV_SYN(EV_SYN::SYN_MT_REPORT),
			EventCode::EV_SYN(EV_SYN::SYN_DROPPED),
			EventCode::EV_SYN(EV_SYN::SYN_MAX),
			// EventCode::EV_KEY(EV_KEY::BTN_SIDE),
			// EventCode::EV_KEY(EV_KEY::BTN_EXTRA),
			EventCode::EV_REL(EV_REL::REL_Y),
			EventCode::EV_REL(EV_REL::REL_X),
			EventCode::EV_REL(EV_REL::REL_WHEEL),
			EventCode::EV_REL(EV_REL::REL_WHEEL_HI_RES),
		];

		for key in KBKey::iter() {
			enable_codes.push(EventCode::EV_KEY(map_key(key)));
		}

		for button in MSButton::iter() {
			enable_codes.push(EventCode::EV_KEY(map_button(button)));
		}

		for enable_code in enable_codes {
			if let Err(_) = device_template.enable_event_code(&enable_code, None) {
				return Err(format!("Failed to enable event code: {:?}", enable_code));
			}
		}

		let virtual_device = match UInputDevice::create_from_device(&device_template) {
			Ok(ok) => ok,
			Err(e) => return Err(format!("Failed to create UInput device: {}", e)),
		};

		Ok(Box::new(Self {
			virtual_device,
		}))
	}

	#[inline(always)]
	fn write_event<V: Into<i32>>(&self, code: EventCode, val: V) -> Result<(), String> {
		self.virtual_device.write_event(&event_now(code, val.into())).map_err(|e| format!("{}", e))
	}

	#[inline(always)]
	fn report(&self) -> Result<(), String> {
		self.write_event(EventCode::EV_SYN(EV_SYN::SYN_REPORT), 0)
	}
}

impl EventReceiver for UInputEventReceiver {
	fn send_event(&self, event: KBMSEvent) -> Result<(), String> {
		match event {
			KBMSEvent::MSPress(button) => {
				self.write_event(EventCode::EV_KEY(map_button(button)), 1)?;
				self.report()
			},
			KBMSEvent::MSRelease(button) => {
				self.write_event(EventCode::EV_KEY(map_button(button)), 0)?;
				self.report()
			},
			KBMSEvent::MSMotion(x, y) => {
				self.write_event(EventCode::EV_REL(EV_REL::REL_X), x)?;
				self.write_event(EventCode::EV_REL(EV_REL::REL_Y), y)?;
				self.report()
			},
			KBMSEvent::MSScrollV(amt) => {
				self.write_event(EventCode::EV_REL(EV_REL::REL_WHEEL), amt)?;
				self.report()
			},
			KBMSEvent::MSScrollH(amt) => {
				println!("Unimplemented Event: KBMSEvent::MSScrollH({})", amt);
				Ok(())
			},
			KBMSEvent::KBPress(key) => {
				self.write_event(EventCode::EV_KEY(map_key(key)), 1)?;
				self.report()
			},
			KBMSEvent::KBRelease(key) => {
				self.write_event(EventCode::EV_KEY(map_key(key)), 0)?;
				self.report()
			},
			_ => Ok(()),
		}
	}
}

fn event_now(code: EventCode, value: i32) -> InputEvent {
	let epoc = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH).unwrap();
	let epocf = epoc.as_secs_f64();
	let usec = (epocf.fract() / 0.000001).trunc() as i64;
	let sec = epocf.trunc() as i64;
	InputEvent::new(&TimeVal::new(sec, usec), &code, value)
}

fn map_button(button: MSButton) -> EV_KEY {
	match button {
		MSButton::Left => EV_KEY::BTN_LEFT,
		MSButton::Middle => EV_KEY::BTN_MIDDLE,
		MSButton::Right => EV_KEY::BTN_RIGHT,
	}
}

fn map_key(key: KBKey) -> EV_KEY {
	match key {
		KBKey::Esc => EV_KEY::KEY_ESC,
		KBKey::Grave => EV_KEY::KEY_GRAVE,
		KBKey::One => EV_KEY::KEY_1,
		KBKey::Two => EV_KEY::KEY_2,
		KBKey::Three => EV_KEY::KEY_3,
		KBKey::Four => EV_KEY::KEY_4,
		KBKey::Five => EV_KEY::KEY_5,
		KBKey::Six => EV_KEY::KEY_6,
		KBKey::Seven => EV_KEY::KEY_7,
		KBKey::Eight => EV_KEY::KEY_8,
		KBKey::Nine => EV_KEY::KEY_9,
		KBKey::Zero => EV_KEY::KEY_0,
		KBKey::Minus => EV_KEY::KEY_MINUS,
		KBKey::Equal => EV_KEY::KEY_EQUAL,
		KBKey::Backspace => EV_KEY::KEY_BACKSPACE,
		KBKey::Tab => EV_KEY::KEY_TAB,
		KBKey::Q => EV_KEY::KEY_Q,
		KBKey::W => EV_KEY::KEY_W,
		KBKey::E => EV_KEY::KEY_E,
		KBKey::R => EV_KEY::KEY_R,
		KBKey::T => EV_KEY::KEY_T,
		KBKey::Y => EV_KEY::KEY_Y,
		KBKey::U => EV_KEY::KEY_U,
		KBKey::I => EV_KEY::KEY_I,
		KBKey::O => EV_KEY::KEY_O,
		KBKey::P => EV_KEY::KEY_P,
		KBKey::LeftBrace => EV_KEY::KEY_LEFTBRACE,
		KBKey::RightBrace => EV_KEY::KEY_RIGHTBRACE,
		KBKey::Backslash => EV_KEY::KEY_BACKSLASH,
		KBKey::CapsLock => EV_KEY::KEY_CAPSLOCK,
		KBKey::A => EV_KEY::KEY_A,
		KBKey::S => EV_KEY::KEY_S,
		KBKey::D => EV_KEY::KEY_D,
		KBKey::F => EV_KEY::KEY_F,
		KBKey::G => EV_KEY::KEY_G,
		KBKey::H => EV_KEY::KEY_H,
		KBKey::J => EV_KEY::KEY_J,
		KBKey::K => EV_KEY::KEY_K,
		KBKey::L => EV_KEY::KEY_L,
		KBKey::SemiColon => EV_KEY::KEY_SEMICOLON,
		KBKey::Apostrophe => EV_KEY::KEY_APOSTROPHE,
		KBKey::Enter => EV_KEY::KEY_ENTER,
		KBKey::LeftShift => EV_KEY::KEY_LEFTSHIFT,
		KBKey::Z => EV_KEY::KEY_Z,
		KBKey::X => EV_KEY::KEY_X,
		KBKey::C => EV_KEY::KEY_C,
		KBKey::V => EV_KEY::KEY_V,
		KBKey::B => EV_KEY::KEY_B,
		KBKey::N => EV_KEY::KEY_N,
		KBKey::M => EV_KEY::KEY_M,
		KBKey::Comma => EV_KEY::KEY_COMMA,
		KBKey::Dot => EV_KEY::KEY_DOT,
		KBKey::Slash => EV_KEY::KEY_SLASH,
		KBKey::RightShift => EV_KEY::KEY_RIGHTSHIFT,
		KBKey::LeftControl => EV_KEY::KEY_LEFTCTRL,
		KBKey::LeftMeta => EV_KEY::KEY_LEFTMETA,
		KBKey::RightMeta => EV_KEY::KEY_RIGHTMETA,
		KBKey::LeftAlt => EV_KEY::KEY_LEFTALT,
		KBKey::Space => EV_KEY::KEY_SPACE,
		KBKey::RightAlt => EV_KEY::KEY_RIGHTALT,
		KBKey::Fn => EV_KEY::KEY_FN,
		KBKey::RightControl => EV_KEY::KEY_RIGHTCTRL,
		KBKey::Insert => EV_KEY::KEY_INSERT,
		KBKey::Delete => EV_KEY::KEY_DELETE,
		KBKey::PageUp => EV_KEY::KEY_PAGEUP,
		KBKey::PageDown => EV_KEY::KEY_PAGEDOWN,
		KBKey::Sysrq => EV_KEY::KEY_SYSRQ,
		KBKey::ScrollLock => EV_KEY::KEY_SCROLLLOCK,
		KBKey::Pause => EV_KEY::KEY_PAUSE,
		KBKey::Home => EV_KEY::KEY_HOME,
		KBKey::End => EV_KEY::KEY_END,
		KBKey::ArrowUp => EV_KEY::KEY_UP,
		KBKey::ArrowDown => EV_KEY::KEY_DOWN,
		KBKey::ArrowLeft => EV_KEY::KEY_LEFT,
		KBKey::ArrowRight => EV_KEY::KEY_RIGHT,
		KBKey::F1 => EV_KEY::KEY_FN_F1,
		KBKey::F2 => EV_KEY::KEY_FN_F2,
		KBKey::F3 => EV_KEY::KEY_FN_F3,
		KBKey::F4 => EV_KEY::KEY_FN_F4,
		KBKey::F5 => EV_KEY::KEY_FN_F5,
		KBKey::F6 => EV_KEY::KEY_FN_F6,
		KBKey::F7 => EV_KEY::KEY_FN_F7,
		KBKey::F8 => EV_KEY::KEY_FN_F8,
		KBKey::F9 => EV_KEY::KEY_FN_F9,
		KBKey::F10 => EV_KEY::KEY_FN_F10,
		KBKey::F11 => EV_KEY::KEY_FN_F11,
		KBKey::F12 => EV_KEY::KEY_FN_F12,
	}
}

// let known_good =
// evdev_rs::Device::new_from_file(std::fs::OpenOptions::new().read(true).open("/dev/input/
// event15").unwrap()).unwrap();
//
// for prop in all_properties().iter() {
// if known_good.has_property(prop) {
// println!("Property {:?}", prop);
// }
// }
//
// for ev_t in all_event_types().iter() {
// if known_good.has_event_type(ev_t) {
// println!("Event Type: {:?}", ev_t);
// }
// }
//
// for ev_c in all_event_codes().iter() {
// if known_good.has_event_code(ev_c) {
// println!("Event Code: {:?}", ev_c);
// }
// }
//
// fn all_properties() -> Vec<ed::enums::InputProp> {
// vec![
// ed::enums::InputProp::INPUT_PROP_POINTER,
// ed::enums::InputProp::INPUT_PROP_DIRECT,
// ed::enums::InputProp::INPUT_PROP_BUTTONPAD,
// ed::enums::InputProp::INPUT_PROP_SEMI_MT,
// ed::enums::InputProp::INPUT_PROP_TOPBUTTONPAD,
// ed::enums::InputProp::INPUT_PROP_POINTING_STICK,
// ed::enums::InputProp::INPUT_PROP_ACCELEROMETER,
// ed::enums::InputProp::INPUT_PROP_MAX,
// ]
// }
//
// fn all_event_types() -> Vec<ed::enums::EventType> {
// vec![
// ed::enums::EventType::EV_SYN,
// ed::enums::EventType::EV_KEY,
// ed::enums::EventType::EV_REL,
// ed::enums::EventType::EV_ABS,
// ed::enums::EventType::EV_MSC,
// ed::enums::EventType::EV_SW,
// ed::enums::EventType::EV_LED,
// ed::enums::EventType::EV_SND,
// ed::enums::EventType::EV_REP,
// ed::enums::EventType::EV_FF,
// ed::enums::EventType::EV_PWR,
// ed::enums::EventType::EV_FF_STATUS,
// ed::enums::EventType::EV_UNK,
// ed::enums::EventType::EV_MAX,
// ]
// }
//
// fn all_event_codes() -> Vec<ed::enums::EventCode> {
// vec![
// ed::enums::EventCode::EV_SYN(ed::enums::EV_SYN::SYN_REPORT),
// ed::enums::EventCode::EV_SYN(ed::enums::EV_SYN::SYN_CONFIG),
// ed::enums::EventCode::EV_SYN(ed::enums::EV_SYN::SYN_MT_REPORT),
// ed::enums::EventCode::EV_SYN(ed::enums::EV_SYN::SYN_DROPPED),
// ed::enums::EventCode::EV_SYN(ed::enums::EV_SYN::SYN_MAX),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RESERVED),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ESC),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_0),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MINUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EQUAL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BACKSPACE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TAB),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_Q),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_W),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_E),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_R),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_T),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_Y),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_U),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_I),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_O),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_P),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFTBRACE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHTBRACE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ENTER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFTCTRL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_A),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_S),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_D),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_G),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_H),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_J),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_K),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_L),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SEMICOLON),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_APOSTROPHE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_GRAVE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFTSHIFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BACKSLASH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_Z),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_X),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_C),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_V),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_B),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_N),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_M),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_COMMA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DOT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SLASH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHTSHIFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPASTERISK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFTALT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SPACE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAPSLOCK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F10),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMLOCK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SCROLLLOCK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPMINUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPPLUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KP0),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPDOT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ZENKAKUHANKAKU),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_102ND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F11),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F12),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KATAKANA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HIRAGANA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HENKAN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KATAKANAHIRAGANA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MUHENKAN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPJPCOMMA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPENTER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHTCTRL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPSLASH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SYSRQ),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHTALT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LINEFEED),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HOME),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PAGEUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_END),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PAGEDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_INSERT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DELETE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MACRO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MUTE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VOLUMEDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VOLUMEUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_POWER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPEQUAL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPPLUSMINUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PAUSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SCALE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPCOMMA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HANGEUL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HANJA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_YEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFTMETA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHTMETA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_COMPOSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_STOP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_AGAIN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROPS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_UNDO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FRONT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_COPY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_OPEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PASTE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FIND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CUT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HELP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MENU),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CALC),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SETUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SLEEP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WAKEUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FILE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SENDFILE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DELETEFILE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_XFER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROG1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROG2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WWW),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MSDOS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_COFFEE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ROTATE_DISPLAY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CYCLEWINDOWS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MAIL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BOOKMARKS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_COMPUTER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BACK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FORWARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CLOSECD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EJECTCD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EJECTCLOSECD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NEXTSONG),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PLAYPAUSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PREVIOUSSONG),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_STOPCD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RECORD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_REWIND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PHONE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ISO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CONFIG),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HOMEPAGE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_REFRESH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EXIT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MOVE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EDIT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SCROLLUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SCROLLDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPLEFTPAREN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KPRIGHTPAREN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NEW),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_REDO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F13),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F14),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F15),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F16),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F17),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F18),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F19),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F20),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F21),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F22),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F23),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_F24),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PLAYCD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PAUSECD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROG3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROG4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DASHBOARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SUSPEND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CLOSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PLAY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FASTFORWARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BASSBOOST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PRINT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_HP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SOUND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_QUESTION),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EMAIL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CHAT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SEARCH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CONNECT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FINANCE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SPORT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SHOP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ALTERASE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CANCEL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESSDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESSUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MEDIA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SWITCHVIDEOMODE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDILLUMTOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDILLUMDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDILLUMUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SEND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_REPLY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FORWARDMAIL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SAVE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DOCUMENTS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BATTERY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BLUETOOTH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WLAN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_UWB),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_UNKNOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VIDEO_NEXT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VIDEO_PREV),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESS_CYCLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESS_AUTO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DISPLAY_OFF),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WWAN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RFKILL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MICMUTE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_OK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SELECT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_GOTO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CLEAR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_POWER2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_OPTION),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_INFO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TIME),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VENDOR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ARCHIVE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PROGRAM),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CHANNEL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FAVORITES),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EPG),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PVR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MHP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LANGUAGE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TITLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SUBTITLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ANGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FULL_SCREEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MODE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KEYBOARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ASPECT_RATIO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PC),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TV),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TV2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VCR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VCR2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SAT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SAT2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TAPE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RADIO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TUNER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PLAYER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TEXT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DVD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_AUX),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MP3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_AUDIO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VIDEO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DIRECTORY),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LIST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MEMO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CALENDAR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RED),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_GREEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_YELLOW),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BLUE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CHANNELUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CHANNELDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FIRST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LAST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_AB),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NEXT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RESTART),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SLOW),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SHUFFLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BREAK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PREVIOUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DIGITS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TEEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TWEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VIDEOPHONE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_GAMES),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ZOOMIN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ZOOMOUT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ZOOMRESET),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WORDPROCESSOR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EDITOR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SPREADSHEET),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_GRAPHICSEDITOR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PRESENTATION),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DATABASE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NEWS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VOICEMAIL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ADDRESSBOOK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MESSENGER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DISPLAYTOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SPELLCHECK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LOGOFF),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DOLLAR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_EURO),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FRAMEBACK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FRAMEFORWARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CONTEXT_MENU),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MEDIA_REPEAT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_10CHANNELSUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_10CHANNELSDOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_IMAGES),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DEL_EOL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DEL_EOS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DEL_LINE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_ESC),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F10),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F11),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F12),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_D),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_E),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_F),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_S),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FN_B),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRL_DOT10),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_0),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_STAR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_POUND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_A),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_B),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_C),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_D),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_FOCUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_WPS_BUTTON),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TOUCHPAD_TOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TOUCHPAD_ON),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TOUCHPAD_OFF),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_ZOOMIN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_ZOOMOUT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_LEFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CAMERA_RIGHT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ATTENDANT_ON),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ATTENDANT_OFF),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ATTENDANT_TOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LIGHTS_TOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ALS_TOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ROTATE_LOCK_TOGGLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BUTTONCONFIG),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_TASKMANAGER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_JOURNAL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_CONTROLPANEL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_APPSELECT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SCREENSAVER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VOICECOMMAND),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ASSISTANT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBD_LAYOUT_NEXT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESS_MIN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_BRIGHTNESS_MAX),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_PREV),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_NEXT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_PREVGROUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_NEXTGROUP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_ACCEPT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_KBDINPUTASSIST_CANCEL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHT_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_RIGHT_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFT_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_LEFT_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ROOT_MENU),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MEDIA_TOP_MENU),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_11),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NUMERIC_12),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_AUDIO_DESC),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_3D_MODE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_NEXT_FAVORITE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_STOP_RECORD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_PAUSE_RECORD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_VOD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_UNMUTE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_FASTREVERSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_SLOWREVERSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_DATA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_ONSCREEN_KEYBOARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::KEY_MAX),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_0),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_LEFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_RIGHT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_MIDDLE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_SIDE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_EXTRA),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_FORWARD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BACK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TASK),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_THUMB),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_THUMB2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOP2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_PINKIE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_BASE6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_DEAD),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_SOUTH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_EAST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_C),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_NORTH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_WEST),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_Z),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TL2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TR2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_SELECT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_START),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_MODE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_THUMBL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_THUMBR),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_PEN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_RUBBER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_BRUSH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_PENCIL),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_AIRBRUSH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_FINGER),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_MOUSE),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_LENS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_QUINTTAP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_STYLUS3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOUCH),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_STYLUS),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_STYLUS2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_DOUBLETAP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_TRIPLETAP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TOOL_QUADTAP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_GEAR_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_GEAR_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_DPAD_UP),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_DPAD_DOWN),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_DPAD_LEFT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_DPAD_RIGHT),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY1),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY2),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY3),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY4),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY5),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY6),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY7),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY8),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY9),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY10),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY11),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY12),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY13),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY14),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY15),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY16),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY17),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY18),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY19),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY20),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY21),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY22),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY23),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY24),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY25),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY26),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY27),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY28),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY29),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY30),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY31),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY32),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY33),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY34),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY35),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY36),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY37),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY38),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY39),
// ed::enums::EventCode::EV_KEY(ed::enums::EV_KEY::BTN_TRIGGER_HAPPY40),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_Y),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_Z),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_X),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_RX),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_RY),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_RZ),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_HWHEEL),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_DIAL),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_WHEEL),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_MISC),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_RESERVED),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_WHEEL_HI_RES),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_HWHEEL_HI_RES),
// ed::enums::EventCode::EV_REL(ed::enums::EV_REL::REL_MAX),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_Z),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_RX),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_RY),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_RZ),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_THROTTLE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_RUDDER),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_WHEEL),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_GAS),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_BRAKE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT0X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT0Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT1X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT1Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT2X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT2Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT3X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_HAT3Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_PRESSURE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_DISTANCE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_TILT_X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_TILT_Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_TOOL_WIDTH),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_VOLUME),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MISC),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_RESERVED),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_SLOT),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TOUCH_MAJOR),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TOUCH_MINOR),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_WIDTH_MAJOR),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_WIDTH_MINOR),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_ORIENTATION),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_POSITION_X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_POSITION_Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TOOL_TYPE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_BLOB_ID),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TRACKING_ID),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_PRESSURE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_DISTANCE),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TOOL_X),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MT_TOOL_Y),
// ed::enums::EventCode::EV_ABS(ed::enums::EV_ABS::ABS_MAX),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_LID),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_TABLET_MODE),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_HEADPHONE_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_RFKILL_ALL),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_MICROPHONE_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_DOCK),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_LINEOUT_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_JACK_PHYSICAL_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_VIDEOOUT_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_CAMERA_LENS_COVER),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_KEYPAD_SLIDE),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_FRONT_PROXIMITY),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_ROTATE_LOCK),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_LINEIN_INSERT),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_MUTE_DEVICE),
// ed::enums::EventCode::EV_SW(ed::enums::EV_SW::SW_PEN_INSERTED),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_NUML),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_CAPSL),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_SCROLLL),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_COMPOSE),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_KANA),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_SLEEP),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_SUSPEND),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_MUTE),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_MISC),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_MAIL),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_CHARGING),
// ed::enums::EventCode::EV_LED(ed::enums::EV_LED::LED_MAX),
// ed::enums::EventCode::EV_SND(ed::enums::EV_SND::SND_CLICK),
// ed::enums::EventCode::EV_SND(ed::enums::EV_SND::SND_BELL),
// ed::enums::EventCode::EV_SND(ed::enums::EV_SND::SND_TONE),
// ed::enums::EventCode::EV_SND(ed::enums::EV_SND::SND_MAX),
// ed::enums::EventCode::EV_REP(ed::enums::EV_REP::REP_DELAY),
// ed::enums::EventCode::EV_REP(ed::enums::EV_REP::REP_PERIOD),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_STATUS_STOPPED),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_STATUS_PLAYING),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_RUMBLE),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_PERIODIC),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_CONSTANT),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_SPRING),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_FRICTION),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_DAMPER),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_INERTIA),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_RAMP),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_SQUARE),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_TRIANGLE),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_SINE),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_SAW_UP),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_SAW_DOWN),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_CUSTOM),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_GAIN),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_AUTOCENTER),
// ed::enums::EventCode::EV_FF(ed::enums::EV_FF::FF_MAX),
// ed::enums::EventCode::EV_PWR,
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_STATUS_STOPPED),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_STATUS_PLAYING),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_RUMBLE),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_PERIODIC),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_CONSTANT),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_SPRING),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_FRICTION),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_DAMPER),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_INERTIA),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_RAMP),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_SQUARE),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_TRIANGLE),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_SINE),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_SAW_UP),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_SAW_DOWN),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_CUSTOM),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_GAIN),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_AUTOCENTER),
// ed::enums::EventCode::EV_FF_STATUS(ed::enums::EV_FF::FF_MAX),
// ed::enums::EventCode::EV_MAX,
// ]
// }
